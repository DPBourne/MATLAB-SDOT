function [w,vol_error,actual_vols] =SDOT2d_fminunc(w0,X,target_vols,bx,periodic,tol)
% [w,vol_error,actual_vols] =SDOT2d_fminunc(w0,X,target_vols,bx,periodic,tol)
%
% This function uses the MATLAB function fminunc to solve the 
% semi-discrete optimal transport problem between the Lebesgue measure 
% and a discrete measure, where the measures are supported on a 3D box, 
% and the transport cost is the standard quadratic cost or the periodic 
% quadratic cost. In other words, this function computes weights w so 
% that the (periodic or non-periodic) Laguerre tessellation of the box bx 
% generated by (X,w) has Laguerre cells with volumes target_vols up to 
% tol percentage error.
%
% Algorithm: This function maximises the Kantorovich (dual) functional 
% using fminunc.
% 
% Input arguments:
%
% w0 is an Nx1 array containing the initial guess for the weights (the 
% minimiser of the Kantorovich functional).
%
% X is an Nx2 array containing the x- and y-coordinates of the seeds.
% This is the support of the discrete target measure.
%
% target_vols is an Nx1 array containing the desired areas of the 
% Laguerre cells. In particular, target_vols(i) is the mass of the point
% X(i,:) with respect to the discrete target measure.
%
% bx=[L1,L2] is a 1-by-2 array containing the dimensions of a 
% rectangular box with vertices (0,0), (L1,0), (0,L2), (L1,L2).
% This is the support of the source measure (the Lebesgue measure).
%
% periodic is a logical argument: 
% If periodic=true, then the Laguerre diagram is periodic (periodic 
% quadratic transport cost). 
% If periodic=false, then the Laguerre diagram is non-periodic (quadratic 
% transport cost).
%
% tol is the tolerance for fminunc. This function produces a Laguerre 
% diagram with cells of given volumes (target_vols) up to tol percent 
% error.
%
% Output arguments:
%
% w is an Nx1 array of weights so that the (periodic or non-periodic)
% Laguerre diagram generated by (X,w) in the box bx has Laguerre cells 
% with volumes target_vols up to tol percentage error.
%
% vol_error is the maximum percentage error of the volumes of the cells.
%
% actual_vols is a Nx1 array containing the actual volumes of the cells in 
% the Laguerre diagram generated by (X,w). These volumes agree with the
% desired volumes (target_vols) up to tol percentage error.
%
% Last updated: 4 October 2022

% Define the ojective function (the Kantorovich function)
fun=@(w)get_g(w,X,target_vols,bx,periodic);

% Set the optimizer tolerance
[~,Dg0]=get_g(w0,X,target_vols,bx,periodic);
epsilon=min([tol*1e-2*min(target_vols),tol*1e-2*min(target_vols)/max(abs(Dg0))]);

% Set the optimizer options
% For MATALB:
options=optimoptions('fminunc','SpecifyObjectiveGradient',true,...
    'Display','off','OptimalityTolerance',epsilon,...
    'StepTolerance',1e-14,'FunctionTolerance',1e-14,'MaxIterations',1e6);
% For octave:
% options=optimset('GradObj','on','Display','off','TolX',epsilon*1e-3,'TolFun',epsilon*1e-3,'MaxIter',1e6);

% To do: Change the 'StepTolerance' and 'FunctionTolerance' to make them
% depend on the size of the box.

% Solve the optimization problem (maximise the Kantorovich functional)
w=fminunc(fun,w0,options);
[actual_vols,~,~]=mexPD_2d(bx,X,w,periodic);
vol_error=max(abs(actual_vols-target_vols)./target_vols)*100;

end

function [g,Dg]=get_g(w,X,target_vols,bx,periodic)
% This is the Kantorovich function -g, where g is defined on page 99 of 
% the book F. Aurenhammer, R. Klein & D.-T. Lee (2013) Voronoi Diagrams 
% and Delaunay Triangulations, World Scientific.

    [actual_vols,transportCosts,~]=mexPD_2d(bx,X,w,periodic);
    Dg=actual_vols-target_vols;
    g=dot(Dg,w)-sum(transportCosts);

end